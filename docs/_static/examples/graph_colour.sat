# Number of verties in the graph.
n = 5;

# Graph representation
neigh[n][n] = {
  (1,2) : 0,
  (1,3) : 1,
  (1,4) : 1,
  (1,5) : 1,

  (2,3) : 1,
  (2,4) : 1,
  (2,5) : 1,

  (3,4) : 1,
  (3,5) : 1,

  (4,5) : 0,
};

# Correspondence between each vertex and its color
vc[n][n];

# Used colors, a quantity we wish to minimize.
c[n];

(int) neighbour_coloring[2]:
    forall{i = [1:n]}
    forall{j = [1:n], j > i}
    forall{k = [1:n]}
    neigh[i][j] -> ~(vc[i][k] & vc[j][k]);

(int) use_color[1]:
    forall{i = [1:n]}
    forall{k = [1:n]}
    vc[i][k] -> c[k];

(int) color_all[1]:
    forall{i = [1:n]}
    unique{k = [1:n]}
    vc[i][k];

(opt) cost: exists{k = [1:n]} c[k];